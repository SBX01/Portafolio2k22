--------------------------------------------------------
-- Archivo creado  - viernes-junio-24-2022   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence COTIZACION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##PY_TALLER"."COTIZACION_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 141 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence DETALLE_SERVICIO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##PY_TALLER"."DETALLE_SERVICIO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence DOCUMENTO_FOLIO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##PY_TALLER"."DOCUMENTO_FOLIO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence DOCUMENTO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##PY_TALLER"."DOCUMENTO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence GRUPO_PRODUCTO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##PY_TALLER"."GRUPO_PRODUCTO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence MEDIO_PAGO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##PY_TALLER"."MEDIO_PAGO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence ORDEN_PEDIDO_PRODUCTO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##PY_TALLER"."ORDEN_PEDIDO_PRODUCTO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 241 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence ORDEN_PRODUCTO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##PY_TALLER"."ORDEN_PRODUCTO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 221 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence RESERVA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##PY_TALLER"."RESERVA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ERROR
--------------------------------------------------------

   CREATE SEQUENCE  "C##PY_TALLER"."SEQ_ERROR"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 5 NOCACHE  ORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ID_SERVICIO
--------------------------------------------------------

   CREATE SEQUENCE  "C##PY_TALLER"."SEQ_ID_SERVICIO"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 5 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_IDSERVICIO
--------------------------------------------------------

   CREATE SEQUENCE  "C##PY_TALLER"."SEQ_IDSERVICIO"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_TIPO_EMP
--------------------------------------------------------

   CREATE SEQUENCE  "C##PY_TALLER"."SEQ_TIPO_EMP"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 4 NOCACHE  ORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SERVICIO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##PY_TALLER"."SERVICIO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TIPO_DOCUMENTO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##PY_TALLER"."TIPO_DOCUMENTO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TIPO_EMPLEADO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##PY_TALLER"."TIPO_EMPLEADO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence TIPO_PRODUCTO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##PY_TALLER"."TIPO_PRODUCTO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Index AUTH_GROU_GROUP_ID__0CD325B0_U
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."AUTH_GROU_GROUP_ID__0CD325B0_U" ON "C##PY_TALLER"."AUTH_GROUP_PERMISSIONS" ("GROUP_ID", "PERMISSION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index AUTH_GROUP_GROUP_ID_B120CBF9
--------------------------------------------------------

  CREATE INDEX "C##PY_TALLER"."AUTH_GROUP_GROUP_ID_B120CBF9" ON "C##PY_TALLER"."AUTH_GROUP_PERMISSIONS" ("GROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index AUTH_GROUP_PERMISSION_84C5C92E
--------------------------------------------------------

  CREATE INDEX "C##PY_TALLER"."AUTH_GROUP_PERMISSION_84C5C92E" ON "C##PY_TALLER"."AUTH_GROUP_PERMISSIONS" ("PERMISSION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index AUTH_PERM_CONTENT_T_01AB375A_U
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."AUTH_PERM_CONTENT_T_01AB375A_U" ON "C##PY_TALLER"."AUTH_PERMISSION" ("CONTENT_TYPE_ID", "CODENAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index AUTH_PERMI_CONTENT_TY_2F476E4B
--------------------------------------------------------

  CREATE INDEX "C##PY_TALLER"."AUTH_PERMI_CONTENT_TY_2F476E4B" ON "C##PY_TALLER"."AUTH_PERMISSION" ("CONTENT_TYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CLIENTE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."CLIENTE_PK" ON "C##PY_TALLER"."CLIENTE" ("RUT_CLI") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index COTIZACION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."COTIZACION_PK" ON "C##PY_TALLER"."COTIZACION" ("NUMERO_FOLIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DETALLE_DOCUMENTO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."DETALLE_DOCUMENTO_PK" ON "C##PY_TALLER"."DETALLE_DOCUMENTO" ("SERVICIO_ID_SEVICIO", "DOCUMENTO_ID_DOCUMENTO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DETALLE_SERVICIO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."DETALLE_SERVICIO_PK" ON "C##PY_TALLER"."DETALLE_SERVICIO" ("PRODUCTO_SKU", "SERVICIO_ID_SEVICIO", "ID_DETALLE_SERVICIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DJANGO_ADM_CONTENT_TY_C4BCE8EB
--------------------------------------------------------

  CREATE INDEX "C##PY_TALLER"."DJANGO_ADM_CONTENT_TY_C4BCE8EB" ON "C##PY_TALLER"."DJANGO_ADMIN_LOG" ("CONTENT_TYPE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DJANGO_ADM_USER_ID_C564EBA6
--------------------------------------------------------

  CREATE INDEX "C##PY_TALLER"."DJANGO_ADM_USER_ID_C564EBA6" ON "C##PY_TALLER"."DJANGO_ADMIN_LOG" ("USER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DJANGO_CO_APP_LABEL_76BD3D3B_U
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."DJANGO_CO_APP_LABEL_76BD3D3B_U" ON "C##PY_TALLER"."DJANGO_CONTENT_TYPE" ("APP_LABEL", "MODEL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DJANGO_SES_EXPIRE_DAT_A5C62663
--------------------------------------------------------

  CREATE INDEX "C##PY_TALLER"."DJANGO_SES_EXPIRE_DAT_A5C62663" ON "C##PY_TALLER"."DJANGO_SESSION" ("EXPIRE_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DOCUMENTO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."DOCUMENTO_PK" ON "C##PY_TALLER"."DOCUMENTO" ("ID_DOCUMENTO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index EMPLEADO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."EMPLEADO_PK" ON "C##PY_TALLER"."EMPLEADO" ("RUT_EMP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index GRUPO_PRODUCTO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."GRUPO_PRODUCTO_PK" ON "C##PY_TALLER"."GRUPO_PRODUCTO" ("ID_CATEGORIA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index MEDIO_PAGO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."MEDIO_PAGO_PK" ON "C##PY_TALLER"."MEDIO_PAGO" ("ID_PAGO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ORDEN_PEDIDO_PRODUCTO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."ORDEN_PEDIDO_PRODUCTO_PK" ON "C##PY_TALLER"."ORDEN_PEDIDO_PRODUCTO" ("FOLIO_PEDIDO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ORDEN-PRODUCTO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."ORDEN-PRODUCTO_PK" ON "C##PY_TALLER"."ORDEN-PRODUCTO" ("ORDEN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PRODUCTO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."PRODUCTO_PK" ON "C##PY_TALLER"."PRODUCTO" ("SKU") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PROVEEDOR_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."PROVEEDOR_PK" ON "C##PY_TALLER"."PROVEEDOR" ("RUT_PROVEEDOR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index RELATION_5_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."RELATION_5_PK" ON "C##PY_TALLER"."PROV-PRODUCTO" ("RUT_PROVEEDOR", "SKU") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index RESERVA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."RESERVA_PK" ON "C##PY_TALLER"."RESERVA" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SERVICIO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."SERVICIO_PK" ON "C##PY_TALLER"."SERVICIO" ("ID_SEVICIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C009272
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."SYS_C009272" ON "C##PY_TALLER"."DJANGO_MIGRATIONS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C009284
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."SYS_C009284" ON "C##PY_TALLER"."ACCOUNTS_ACCOUNT" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C009285
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."SYS_C009285" ON "C##PY_TALLER"."ACCOUNTS_ACCOUNT" ("USERNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C009286
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."SYS_C009286" ON "C##PY_TALLER"."ACCOUNTS_ACCOUNT" ("EMAIL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C009309
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."SYS_C009309" ON "C##PY_TALLER"."DJANGO_CONTENT_TYPE" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C009316
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."SYS_C009316" ON "C##PY_TALLER"."DJANGO_ADMIN_LOG" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C009321
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."SYS_C009321" ON "C##PY_TALLER"."AUTH_PERMISSION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C009323
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."SYS_C009323" ON "C##PY_TALLER"."AUTH_GROUP" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C009324
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."SYS_C009324" ON "C##PY_TALLER"."AUTH_GROUP" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C009328
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."SYS_C009328" ON "C##PY_TALLER"."AUTH_GROUP_PERMISSIONS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C009336
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."SYS_C009336" ON "C##PY_TALLER"."DJANGO_SESSION" ("SESSION_KEY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TIPO_DOCUMENTO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."TIPO_DOCUMENTO_PK" ON "C##PY_TALLER"."TIPO_DOCUMENTO" ("ID_TIPO_DOC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TIPO_EMPLEADO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."TIPO_EMPLEADO_PK" ON "C##PY_TALLER"."TIPO_EMPLEADO" ("ID_TIPO_EMP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TIPO_PRODUCTO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."TIPO_PRODUCTO_PK" ON "C##PY_TALLER"."TIPO_PRODUCTO" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VEHICULO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##PY_TALLER"."VEHICULO_PK" ON "C##PY_TALLER"."VEHICULO" ("PANTENTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger COTIZACION_TRG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "C##PY_TALLER"."COTIZACION_TRG" 
BEFORE INSERT ON COTIZACION 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.NUMERO_FOLIO IS NULL THEN
      SELECT COTIZACION_SEQ.NEXTVAL INTO :NEW.NUMERO_FOLIO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "C##PY_TALLER"."COTIZACION_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DETALLE_SERVICIO_TRG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "C##PY_TALLER"."DETALLE_SERVICIO_TRG" 
BEFORE INSERT ON C##PY_TALLER.DETALLE_SERVICIO 
FOR EACH ROW 
  WHEN (NEW.ID_DETALLE_SERVICIO IS NULL) BEGIN
:new.id_detalle_servicio := c##py_taller.detalle_servicio_seq.nextval;

end;
/
ALTER TRIGGER "C##PY_TALLER"."DETALLE_SERVICIO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DOCUMENTO_TRG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "C##PY_TALLER"."DOCUMENTO_TRG" 
BEFORE INSERT ON DOCUMENTO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_DOCUMENTO IS NULL THEN
      SELECT DOCUMENTO_SEQ.NEXTVAL INTO :NEW.ID_DOCUMENTO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "C##PY_TALLER"."DOCUMENTO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger FOLIO_DOCUMENTO_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##PY_TALLER"."FOLIO_DOCUMENTO_TRG" 
   before insert on "C##PY_TALLER"."DOCUMENTO" 
   for each row 
begin  
   if inserting then 
      if :NEW."FOLIO" is null then 
         select DOCUMENTO_FOLIO_SEQ.nextval into :NEW."FOLIO" from dual; 
      end if; 
   end if; 
end;

/
ALTER TRIGGER "C##PY_TALLER"."FOLIO_DOCUMENTO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger GRUPO_PRODUCTO_TRG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "C##PY_TALLER"."GRUPO_PRODUCTO_TRG" 
BEFORE INSERT ON C##PY_TALLER.GRUPO_PRODUCTO 
FOR EACH ROW 
  WHEN (NEW.ID_CATEGORIA IS NULL) BEGIN
:new.id_categoria := c##py_taller.grupo_producto_seq.nextval;

end;
/
ALTER TRIGGER "C##PY_TALLER"."GRUPO_PRODUCTO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger MEDIO_PAGO_TRG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "C##PY_TALLER"."MEDIO_PAGO_TRG" 
BEFORE INSERT ON MEDIO_PAGO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_PAGO IS NULL THEN
      SELECT MEDIO_PAGO_SEQ.NEXTVAL INTO :NEW.ID_PAGO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "C##PY_TALLER"."MEDIO_PAGO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ORDEN_PEDIDO_PRODUCTO_TRG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "C##PY_TALLER"."ORDEN_PEDIDO_PRODUCTO_TRG" 
BEFORE INSERT ON C##PY_TALLER.ORDEN_PEDIDO_PRODUCTO 
FOR EACH ROW 
  WHEN (NEW.FOLIO_PEDIDO IS NULL) BEGIN
:new.folio_pedido := c##py_taller.orden_pedido_producto_seq.nextval;

end;
/
ALTER TRIGGER "C##PY_TALLER"."ORDEN_PEDIDO_PRODUCTO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ORDEN_PRODUCTO_TRG
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##PY_TALLER"."ORDEN_PRODUCTO_TRG" 
   before insert on "C##PY_TALLER"."ORDEN-PRODUCTO" 
   for each row 
begin  
   if inserting then 
      if :NEW."ORDEN_ID" is null then 
         select ORDEN_PRODUCTO_SEQ.nextval into :NEW."ORDEN_ID" from dual; 
      end if; 
   end if; 
end;

/
ALTER TRIGGER "C##PY_TALLER"."ORDEN_PRODUCTO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RESERVA_TRG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "C##PY_TALLER"."RESERVA_TRG" 
BEFORE INSERT ON RESERVA 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT RESERVA_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "C##PY_TALLER"."RESERVA_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SERVICIO_TRG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "C##PY_TALLER"."SERVICIO_TRG" 
BEFORE INSERT ON SERVICIO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_SEVICIO IS NULL THEN
      SELECT SERVICIO_SEQ.NEXTVAL INTO :NEW.ID_SEVICIO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "C##PY_TALLER"."SERVICIO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TIPO_DOCUMENTO_TRG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "C##PY_TALLER"."TIPO_DOCUMENTO_TRG" 
BEFORE INSERT ON TIPO_DOCUMENTO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_TIPO_DOC IS NULL THEN
      SELECT TIPO_DOCUMENTO_SEQ.NEXTVAL INTO :NEW.ID_TIPO_DOC FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "C##PY_TALLER"."TIPO_DOCUMENTO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TIPO_EMPLEADO_TRG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "C##PY_TALLER"."TIPO_EMPLEADO_TRG" 
BEFORE INSERT ON TIPO_EMPLEADO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_TIPO_EMP IS NULL THEN
      SELECT TIPO_EMPLEADO_SEQ.NEXTVAL INTO :NEW.ID_TIPO_EMP FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "C##PY_TALLER"."TIPO_EMPLEADO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TIPO_PRODUCTO_TRG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "C##PY_TALLER"."TIPO_PRODUCTO_TRG" 
BEFORE INSERT ON TIPO_PRODUCTO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT TIPO_PRODUCTO_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "C##PY_TALLER"."TIPO_PRODUCTO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Procedure SP_ACTUALIZAR_PEDIDO_PRODUCTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PY_TALLER"."SP_ACTUALIZAR_PEDIDO_PRODUCTO" (

v_folio orden_pedido_producto.folio_pedido%TYPE,
v_cantidad orden_pedido_producto.cantidad%TYPE,
v_sku producto.sku%TYPE

)
is

begin
    declare
        v_stock number;
        v_nuevo_stock number;
    begin
        select stock
        into v_stock
        from producto
        where sku = v_sku;

        v_nuevo_stock := v_stock + v_cantidad;

        update producto
        set stock = v_nuevo_stock
        where sku = v_sku;
    end;    

    update orden_pedido_producto
    set fecha_recepcion = sysdate, 
        recibido = 1
    where folio_pedido = v_folio; 

    --select sku,stock,40 as cantidad_pedido,stock + 40 as stock_actual
    --from producto;
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_ADD_COTIZACION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PY_TALLER"."SP_ADD_COTIZACION" (
v_comentario cotizacion.comentario%TYPE,
v_reserva cotizacion.reserva_id%TYPE,
v_servicio cotizacion.id_sevicio%TYPE,

v_sku producto.sku%TYPE,
v_cantidad producto.sku%TYPE,

v_mail empleado.usermail%TYPE,
v_tipo_doc tipo_documento.id_tipo_doc%TYPE,
v_pago medio_pago.id_pago%TYPE
)
is 
begin
    declare
        v_precio servicio.precio%TYPE;
        v_stock producto.stock%TYPE;
        v_stock_nuevo producto.stock%TYPE;
        v_rut_emp empleado.rut_emp%TYPE;
        v_rut_cli cliente.rut_cli%TYPE;
        v_total_product producto.precio_venta%TYPE;
        v_precio_product producto.precio_venta%TYPE;
        v_total number;
    begin
        --sacar el rut del empleado
        select rut_emp
        into v_rut_emp
        from empleado
        where usermail =v_mail;

        --sacar el rut del cliente
        select cliente_rut_cli
        into v_rut_cli
        from reserva
        where id = v_reserva;

        --sacar el valor del servicio
        select precio
        into v_precio
        from servicio
        where id_sevicio = v_servicio;

        --sacar el valos del producto
        select precio_venta
        into v_precio_product
        from producto
        where sku = v_sku;

        v_total_product := v_precio_product*v_cantidad;

        v_total := v_total_product + v_precio;

        --sacar el stock actual
        select stock
        into v_stock
        from producto
        where sku = v_sku;


        --actualizamos el estado de la reserva
        update reserva
        set estado = 0
        where id = v_reserva;

        --actualizamos el stock del producto utilizado
        v_stock_nuevo := v_stock - v_cantidad;

        update producto
        set stock = v_stock_nuevo
        where sku = v_sku;

        --Guardamos la cotizacion
        insert into cotizacion
        values(cotizacion_seq.nextval,v_comentario,v_reserva,v_servicio,v_precio);


        --Guardamos el detalle del servicio
        insert into detalle_servicio
        values(detalle_servicio_seq.nextval,v_cantidad,v_servicio,v_sku);

        --guardamos los datos en la tabla documento
        insert into documento
        values(documento_seq.nextval,documento_folio_seq.nextval,to_date(sysdate),
        v_total,0,v_tipo_doc,v_rut_emp,v_rut_cli,v_pago,0);

        --detalle documento
        insert into detalle_documento
        values(v_servicio,documento_seq.currval);

    end;

end;

/
--------------------------------------------------------
--  DDL for Procedure SP_AGREGAR_CLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PY_TALLER"."SP_AGREGAR_CLIENTE" 
(
V_RUN IN CLIENTE.RUT_CLI%type, 
V_NOMBRE IN CLIENTE.NOMBRE%type, 
V_APELLIDO IN CLIENTE.APELLIDO%TYPE,
V_CONTACTO IN CLIENTE.CONTACTO%TYPE,
V_ACTIVO IN CLIENTE.ACTIVO%TYPE,
V_USERMAIL IN CLIENTE.USERMAIL%TYPE,
V_PASSWORD IN CLIENTE.PASSWORD%TYPE,
V_RUT_EMP IN CLIENTE.RUT_EMPRESA%TYPE,
V_GIRO IN CLIENTE.GIRO%TYPE,
V_RAZON IN CLIENTE.RAZON_SOCIAL%TYPE,

v_salida out number

)
is
begin
    --cursor con los rut de los clientes
    DECLARE
        CURSOR c_cliente IS
         SELECT RUT_CLI
         FROM CLIENTE;

        v_run_cliente CLIENTE.RUT_CLI%TYPE;

        confirmacion NUMBER;
    begin
        confirmacion := 0;
        for c in c_cliente loop
            v_run_cliente := c.rut_cli;
            --actualiza los datos del cliente
            --cuando el rut del cliente coincide
            if v_run_cliente = V_RUN THEN
                update cliente set
                    NOMBRE = V_NOMBRE,
                    APELLIDO = V_APELLIDO,
                    CONTACTO = V_CONTACTO,
                    USERMAIL = V_USERMAIL,
                    RUT_EMPRESA = V_RUT_EMP,
                    GIRO = V_GIRO,
                    RAZON_SOCIAL = V_RAZON
                where rut_cli = V_RUN;
                --actuliza los campos de accounts
                update ACCOUNTS_ACCOUNT set
                    FIRST_NAME = V_NOMBRE,
                    LAST_NAME = V_APELLIDO,
                    EMAIL = V_USERMAIL  
                where EMAIL = V_USERMAIL;
                confirmacion :=1;
            end if;
        end loop;
        --si no existe el cliente lo registra en la tabla
        if confirmacion != 1 then
            insert into cliente
            values(V_RUN,V_NOMBRE,V_APELLIDO,V_CONTACTO,V_ACTIVO,
                    V_USERMAIL,V_PASSWORD,V_RUT_EMP,V_GIRO,V_RAZON);
        end if;
    commit;
    end;
v_salida := 1;

exception
    when DUP_VAL_ON_INDEX THEN
        RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error de dato duplicado');
    WHEN OTHERS THEN 
        v_salida:=0;
        RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error desconocido');
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_AGREGAR_PRODUCTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "C##PY_TALLER"."SP_AGREGAR_PRODUCTO" (
V_SKU IN PRODUCTO.SKU%TYPE, 
V_NOMBRE IN producto.nombre_corto%type, 
V_DESCRIPCION IN PRODUCTO.DESCRIPCION%TYPE,
V_PRECIOC IN producto.precio_compra%TYPE,
V_PRECIOV IN producto.precio_venta%TYPE,
V_STOCK IN producto.stock%TYPE,
V_STOCKCR IN producto.stock_critico%TYPE,
V_ID_CAT IN producto.id_categoria%TYPE,
V_FECHA IN varchar2,
V_MEDIDA in varchar2,
V_RUTPROV IN PROVEEDOR.RUT_PROVEEDOR%TYPE,
v_salida out number
) IS
BEGIN
	IF v_fecha = '00000000' THEN
		INSERT INTO PRODUCTO VALUES(
  V_SKU,V_NOMBRE,V_DESCRIPCION,
  V_PRECIOC,V_PRECIOV ,V_STOCK,
  V_STOCKCR,1,V_ID_CAT,
  null,V_MEDIDA);
  else
  INSERT INTO PRODUCTO VALUES(
  V_SKU,V_NOMBRE,V_DESCRIPCION,
  V_PRECIOC,V_PRECIOV ,V_STOCK,
  V_STOCKCR,1,V_ID_CAT,
  v_fecha,V_MEDIDA);
	END IF;



  COMMIT;

  INSERT INTO "PROV-PRODUCTO" VALUES(V_RUTPROV,V_SKU);
  COMMIT;
  V_SALIDA:= 1;
  exception
    when DUP_VAL_ON_INDEX THEN
        RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error de dato duplicado');
    WHEN OTHERS THEN 
        v_salida:=0;
        RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error desconocido:'+ SQLERRM);
END SP_AGREGAR_PRODUCTO;

/
--------------------------------------------------------
--  DDL for Procedure SP_AGREGAR_SERVICIO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PY_TALLER"."SP_AGREGAR_SERVICIO" 
  (
v_name servicio.nombre%type,
v_precio servicio.precio%type,

v_salida out number

)
is
begin

insert into servicio
values(SEQ_IDSERVICIO.nextval,v_name,v_precio,1);
commit;

v_salida :=1;
exception
    when DUP_VAL_ON_INDEX THEN
        RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error de dato duplicado');
    WHEN OTHERS THEN 
        v_salida:=0;
        RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error desconocido');
END SP_AGREGAR_SERVICIO;

/
--------------------------------------------------------
--  DDL for Procedure SP_AGREGAR_TRABAJADOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PY_TALLER"."SP_AGREGAR_TRABAJADOR" 
(
V_RUN IN EMPLEADO.RUT_EMP%TYPE, 
V_NOMBRE IN EMPLEADO.NOMBRE%type, 
V_APELLIDO IN EMPLEADO.APELLIDOS%TYPE,
V_TELEFONO IN EMPLEADO.TELEFONO%TYPE,
V_ACTIVO IN EMPLEADO.ACTIVO%TYPE,
V_TIPO_EMP IN EMPLEADO.ID_TIPO_EMP%TYPE,
V_USERMAIL IN EMPLEADO.USERMAIL%TYPE,
V_PASSWORD IN EMPLEADO.PASSWORD%TYPE,


v_salida out number

)
is
begin
    --cursor con los rut de los clientes
    DECLARE
        CURSOR c_empleado IS
         SELECT RUT_EMP
         FROM EMPLEADO;

        v_run_empleado EMPLEADO.RUT_EMP%TYPE;

        confirmacion NUMBER;
    begin
        confirmacion := 0;
        for c in c_empleado loop
            v_run_empleado := c.rut_emp;
            --actualiza los datos del cliente
            --cuando el rut del cliente coincide
            if v_run_empleado = V_RUN THEN
                update empleado set
                    NOMBRE = V_NOMBRE,
                    APELLIDOS = V_APELLIDO,
                    TELEFONO = V_TELEFONO,
                    USERMAIL = V_USERMAIL
                where rut_emp = V_RUN;
                --actuliza los campos de accounts
                update ACCOUNTS_ACCOUNT set
                    FIRST_NAME = V_NOMBRE,
                    LAST_NAME = V_APELLIDO,
                    EMAIL = V_USERMAIL  
                where EMAIL = V_USERMAIL;
                confirmacion :=1;
            end if;
        end loop;
        --si no existe el cliente lo registra en la tabla
        if confirmacion != 1 then
            insert into empleado
            values(V_RUN,V_NOMBRE,V_APELLIDO,V_TELEFONO,V_ACTIVO,V_TIPO_EMP,
                    V_USERMAIL,V_PASSWORD);
        end if;
    commit;
    end;
v_salida := 1;

exception
    when DUP_VAL_ON_INDEX THEN
        RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error de dato duplicado');
    WHEN OTHERS THEN 
        v_salida:=0;
        RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error desconocido');
end;

/
--------------------------------------------------------
--  DDL for Procedure SP_LISTA_DOCUMENTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PY_TALLER"."SP_LISTA_DOCUMENTO" 
(REG OUT SYS_REFCURSOR,

v_id_detalle detalle_servicio.id_detalle_servicio%TYPE
)
IS
BEGIN
        OPEN REG FOR 
        select doc.folio,ddoc.servicio_id_sevicio as servicio_id,doc.fecha_emision,ser.nombre,
        ser.precio precio_servicio,dser.cantidad,pro.nombre_corto||' '||pro.descripcion producto,
        pro.precio_venta,
        doc.total,round(doc.total/1.19,2) as subtotal,round(doc.total/1.19)*0.19 as iva,
        doc.rut_emp,emp.nombre||' '||emp.apellidos as nombre_empleado,
        doc.rut_cli,cli.nombre||' '||cli.apellido as nombre_cliente,cli.contacto,cli.usermail
        from documento doc join detalle_documento ddoc 
        on(doc.id_documento = ddoc.documento_id_documento)
        join servicio ser on (ser.id_sevicio = ddoc.servicio_id_sevicio)
        join cotizacion co on(co.id_sevicio = ser.id_sevicio)
        join empleado emp on(emp.rut_emp = doc.rut_emp)
        join cliente cli on (cli.rut_cli = doc.rut_cli)
        join detalle_servicio dser on (dser.servicio_id_sevicio = ser.id_sevicio)
        join producto pro on (pro.sku = dser.producto_sku)
        where dser.id_detalle_servicio =v_id_detalle     
        ;

END;

/
--------------------------------------------------------
--  DDL for Procedure SP_LISTA_DOCUMENTO_TIPO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PY_TALLER"."SP_LISTA_DOCUMENTO_TIPO" 
(REG OUT SYS_REFCURSOR)
IS
BEGIN
OPEN REG FOR 
SELECT id_tipo_doc, nombre 
FROM tipo_documento;
END;

/
--------------------------------------------------------
--  DDL for Procedure SP_LISTA_PAGOS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PY_TALLER"."SP_LISTA_PAGOS" 
(REG OUT SYS_REFCURSOR)
IS
BEGIN
OPEN REG FOR 
SELECT id_pago, nombre 
FROM medio_pago
where enuso = 1;
END;

/
--------------------------------------------------------
--  DDL for Procedure SP_LISTA_PRODUCTOS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PY_TALLER"."SP_LISTA_PRODUCTOS" 
(REG OUT SYS_REFCURSOR)
IS
BEGIN
OPEN REG FOR 
SELECT sku, nombre_corto
from producto
where enuso = 1;
END;

/
--------------------------------------------------------
--  DDL for Procedure SP_LISTA_RESERVAS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PY_TALLER"."SP_LISTA_RESERVAS" 
(REG OUT SYS_REFCURSOR)
IS
BEGIN
OPEN REG FOR 
SELECT id,to_date(fecha),cliente_rut_cli,comentario 
FROM reserva
where estado = 1
order by fecha desc;
END;

/
--------------------------------------------------------
--  DDL for Procedure SP_LISTA_SERVICIOS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PY_TALLER"."SP_LISTA_SERVICIOS" 
(REG OUT SYS_REFCURSOR)
IS
BEGIN
OPEN REG FOR 
SELECT id_sevicio, nombre 
FROM servicio
where enuso = 1;
END;

/
--------------------------------------------------------
--  DDL for Procedure SP_LISTA_SERVICIOS_REALIZADOS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PY_TALLER"."SP_LISTA_SERVICIOS_REALIZADOS" 
(REG OUT SYS_REFCURSOR,
v_mail cliente.usermail%TYPE)
IS
BEGIN 
    declare
        v_rut cliente.rut_cli%TYPE;
    begin
        select rut_cli
        into v_rut
        from cliente
        where usermail = v_mail;

        OPEN REG FOR 
        select ds.id_detalle_servicio,s.nombre,c.comentario,re.fecha
        from detalle_servicio ds join servicio s on (ds.servicio_id_sevicio = s.id_sevicio)
        join cotizacion c on (s.id_sevicio = c.id_sevicio)
        join reserva re on (re.id = c.reserva_id)
        where re.cliente_rut_cli = v_rut
        ;
    end;
END;

/
--------------------------------------------------------
--  DDL for Procedure SP_LISTA_TIPO_EMPLEADO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PY_TALLER"."SP_LISTA_TIPO_EMPLEADO" 
(REG OUT SYS_REFCURSOR)
AS

BEGIN
OPEN REG FOR 
SELECT id_tipo_emp, seccion FROM tipo_empleado;
END;

/
--------------------------------------------------------
--  DDL for Procedure SP_REGISTRAR_RESERVA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "C##PY_TALLER"."SP_REGISTRAR_RESERVA" (
    v_fecha in VARCHAR2,
    v_mail in cliente.usermail%type,
    v_comentario in reserva.comentario%TYPE,
    v_salida out number
)
IS 
BEGIN
    DECLARE
        v_rut_cli  cliente.rut_cli%TYPE;

    BEGIN     
        --sacamos el rut del cliente
        select rut_cli
        into v_rut_cli
        from cliente
        where usermail = v_mail;

        INSERT INTO RESERVA VALUES(null,TO_TIMESTAMP(v_fecha, 'dd/mm/yy HH24:MI:SS.FF'),1,v_rut_cli,v_comentario);
        commit;
        v_salida:=1;
        exception
        when DUP_VAL_ON_INDEX THEN
            RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,'Error de dato duplicado');
            v_salida:=0;
        WHEN OTHERS THEN 
            v_salida:=0;
            RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,SQLERRM);

    END;
END;

/
--------------------------------------------------------
--  DDL for Procedure SP_REGISTRO_VEHICULO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "C##PY_TALLER"."SP_REGISTRO_VEHICULO" (
V_PATENTE IN VEHICULO.PANTENTE%TYPE,
V_MARCA IN VEHICULO.MARCA%TYPE,
V_MODELO IN VEHICULO.MODELO%TYPE,
V_ANIO IN VEHICULO.ANIO%TYPE,
V_RUT IN VEHICULO.CLIENTE_RUT_CLI%TYPE,
V_SALIDA OUT NUMBER
)
IS
BEGIN
  INSERT INTO VEHICULO VALUES (V_PATENTE,V_MARCA,V_MODELO,V_ANIO,1,V_RUT);
  COMMIT;
v_salida :=1;
exception
    when DUP_VAL_ON_INDEX THEN
        v_salida:=0;
        RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error de dato duplicado');
    WHEN OTHERS THEN 
        v_salida:=0;
        RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error desconocido');
END SP_REGISTRO_VEHICULO;

/
--------------------------------------------------------
--  DDL for Procedure SP_TIPO_CLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PY_TALLER"."SP_TIPO_CLIENTE" 
(
v_seccion tipo_empleado.seccion%type,

v_salida out number

)
is
begin

insert into tipo_empleado
values(SEQ_TIPO_EMP.nextval,v_seccion);
commit;

v_salida :=1;
exception
    when DUP_VAL_ON_INDEX THEN
        RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error de dato duplicado');
    WHEN OTHERS THEN 
        v_salida:=0;
        RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error desconocido');
end;


/
--------------------------------------------------------
--  DDL for Procedure SP_TIPO_EMPLEADO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PY_TALLER"."SP_TIPO_EMPLEADO" 
(
v_seccion tipo_empleado.seccion%type,

v_salida out number

)
is
begin

insert into tipo_empleado
values(SEQ_TIPO_EMP.nextval,v_seccion);
commit;

v_salida :=1;
exception
    when DUP_VAL_ON_INDEX THEN
        RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error de dato duplicado');
    WHEN OTHERS THEN 
        v_salida:=0;
        RAISE_APPLICATION_ERROR(SEQ_ERROR.NEXTVAL,' Error desconocido');
end;

/
